get:
  tags:
    - Class
  summary: Get classes
  parameters:
    - in: query
      name: groupBy
      schema:
        type: string
        enum: [cohort, instructor]
      required: true
      description: parent group which populates classes
    - in: query
      name: cohortId
      schema:
        type: array
        items:
          type: integer
      required: false
      description: Multiple ids of the cohorts to get
    - in: query
      name: instructorId
      schema:
        type: array
        items:
          type: integer
      required: false
      description: Multiple ids of the instructors to get
  responses:
    '200':
      description: Returns classes
      content:
        application/json:
          schema:
            type: object
            required:
              - statusCode
              - message
              - data
            properties:
              statusCode:
                type: integer
                example: 200
              message:
                type: string
                example: OK
              data:
                type: array
                items:
                  allOf:
                    - $ref: '../../schemas/cohort/cohortStaticProps.yml'
                    - $ref: '../../schemas/cohort/cohortDynamicProps.yml'
                    - $ref: '../../schemas/cohort/cohortStaticForeignProps.yml'
    '400':
      $ref: '../../index.yml#/components/schemas/400Error'
    '500':
      $ref: '../../index.yml#/components/schemas/500Error'

post:
  tags:
    - Class
  summary: Create new class
  requestBody:
    required: true
    content:
      application/json:
        schema:
          allOf:
            - $ref: '../../schemas/class/classDynamicProps.yml'
            - $ref: '../../schemas/class/classDynamicForeignProps.yml'
  responses:
    '200':
      description: Returns new class
      content:
        application/json:
          schema:
            type: object
            required:
              - statusCode
              - message
              - data
            properties:
              statusCode:
                type: integer
                example: 200
              message:
                type: string
                example: OK
              data:
                allOf:
                  - $ref: '../../schemas/class/classStaticProps.yml'
                  - $ref: '../../schemas/class/classDynamicProps.yml'
                  - $ref: '../../schemas/class/classStaticForeignProps.yml'
    '400':
      $ref: '../../index.yml#/components/schemas/400Error'
    '500':
      $ref: '../../index.yml#/components/schemas/500Error'
